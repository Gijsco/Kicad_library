Public FileNames As Variant

Sub Clear_All_Files_And_SubFolders_In_Folder(MyPath As String)
'Delete all files and subfolders
'Be sure that no file is open in the folder
    Dim fso As Object

    Set fso = CreateObject("scripting.filesystemobject")

    If Right(MyPath, 1) = "\" Then
        MyPath = Left(MyPath, Len(MyPath) - 1)
    End If

    If fso.FolderExists(MyPath) = False Then
        MsgBox MyPath & " doesn't exist"
        Exit Sub
    End If

    On Error Resume Next
    'Delete files
    fso.deletefile MyPath & "\*.*", True
    'Delete subfolders
    fso.deletefolder MyPath & "\*.*", True
    On Error GoTo 0

End Sub

Sub NewZip(sPath)
'Create empty Zip File
    If Len(Dir(sPath)) > 0 Then Kill sPath
    Open sPath For Output As #1
    Print #1, Chr$(80) & Chr$(75) & Chr$(5) & Chr$(6) & String(18, 0)
    Close #1
End Sub

Public Function GetImportFileName() As Boolean
      Dim Msg As String
      Dim File As String
      Dim I As Integer
      FileNames = Application.GetOpenFilename(MultiSelect:=True)
      If IsArray(FileNames) Then
          Msg = "You selected:" & vbNewLine
          For I = LBound(FileNames) To UBound(FileNames)
              File = Right(FileNames(I), Len(FileNames(I)) - InStrRev(FileNames(I), "\"))
              Msg = Msg & File & vbNewLine
          Next I
          GetImportFileName = MsgBox(Msg, vbOKCancel)
      Else
          MsgBox "No files were selected."
          GetImportFileName = False
      End If
  End Function
  
Public Function GetNewName() As String
    Dim ExampleFile As String
    ExampleFile = Right(FileNames(1), Len(FileNames(1)) - InStrRev(FileNames(1), "\"))
    GetNewName = InputBox("Enter a new filename for the export." & vbNewLine & "One of your current files is named: " & ExampleFile & vbNewLine & "No special characters!!!")
    If (StrComp(GetNewName, "") = 0) Then
        GetNewName = "MyPCB"
    End If
End Function

Sub MakeCustomZip(MyArray() As Variant)
    Dim NewName, ZipPath, TempPath As String
    Dim oApp As Object 'for making .zip file
    Set oApp = CreateObject("Shell.Application")
    Dim fso As Object 'for copying files with new name to temp folder
    Set fso = VBA.CreateObject("Scripting.FileSystemObject")
    Dim dummyBool As Boolean
    
    ChDir (ThisWorkbook.Path)
    If (GetImportFileName = True) Then
        'Set file names
        NewName = GetNewName()
        ZipPath = Left(FileNames(1), InStrRev(FileNames(1), "\"))
        TempPath = ZipPath & "temp"
        ZipPath = ZipPath & NewName & ".zip"
        NewZip (ZipPath)
        'Make and remove folders
        Clear_All_Files_And_SubFolders_In_Folder (TempPath)
        Application.Wait (Now + TimeValue("0:00:01"))
        On Error Resume Next
        MkDir TempPath
        On Error GoTo 0
        Application.Wait (Now + TimeValue("0:00:01"))
        'Copy files
        For I = LBound(FileNames) To UBound(FileNames)
            For J = LBound(MyArray, 2) To UBound(MyArray, 2)
                'Check if file extention is either a Kicad normal format or a Kicad portel filename, if so copy file with custom extention
                If (InStr(1, CStr(FileNames(I)), MyArray(1, J), vbBinaryCompare) > 1 Or InStr(1, CStr(FileNames(I)), MyArray(2, J), vbBinaryCompare) > 1) Then
                    fso.CopyFile FileNames(I), TempPath & "\" & NewName & MyArray(0, J), True
                    Application.Wait (Now + TimeValue("0:00:01"))
                End If
            Next J
        Next I
          Application.Wait (Now + TimeValue("0:00:01"))
        'Copy the files to the compressed folder
        oApp.Namespace((ZipPath)).CopyHere oApp.Namespace((TempPath)).items
        dummyBool = MsgBox("Done Creating:" & vbNewLine & ZipPath, vbOKCancel)
        
        'This last part makes the programm crash
        'Keep script waiting until Compressing is done
        'On Error Resume Next
        'Do Until oApp.Namespace(ZipPath).items.Count = _
        'oApp.Namespace(TempPath).items.Count
        '    Application.Wait (Now + TimeValue("0:00:01"))
        'Loop
        'On Error GoTo 0
    End If
End Sub

Sub SeeedStudio_Click()

    Dim MyArray(3, 8) As Variant
    
    ' As seedstudio describes
    MyArray(0, 1) = ".GTL" 'Top Layer
    MyArray(0, 2) = ".GBL" 'Bottom Layer
    MyArray(0, 3) = ".GTS" 'Solder Mask To
    MyArray(0, 4) = ".GBS" 'Solder Mask Bottom
    MyArray(0, 5) = ".GTO" 'Silk Top
    MyArray(0, 6) = ".GBO" 'Silk Bottom
    MyArray(0, 7) = ".TXT" 'Drill Drawing
    MyArray(0, 8) = ".GML" 'Board Outline
    ' Kicads normal output
    MyArray(1, 1) = "F.Cu.gbr" 'Top Layer
    MyArray(1, 2) = "B.Cu.gbr" 'Bottom Layer
    MyArray(1, 3) = "F.Mask.gbr" 'Solder Mask To
    MyArray(1, 4) = "B.Mask.gbr" 'Solder Mask Bottom
    MyArray(1, 5) = "F.SilkS.gbr" 'Silk Top
    MyArray(1, 6) = "B.SilkS.gbr" 'Silk Bottom
    MyArray(1, 7) = ".drl" 'Drill Drawing
    MyArray(1, 8) = "Edge.Cuts.gbr" 'Board Outline
    ' Kicads output in portel filename
    MyArray(2, 1) = ".gtl" 'Top Layer
    MyArray(2, 2) = ".gbl" 'Bottom Layer
    MyArray(2, 3) = ".gts" 'Solder Mask To
    MyArray(2, 4) = ".gbs" 'Solder Mask Bottom
    MyArray(2, 5) = ".gto" 'Silk Top
    MyArray(2, 6) = ".gbo" 'Silk Bottom
    MyArray(2, 7) = ".drl" 'Drill Drawing
    MyArray(2, 8) = ".gm1" 'Board Outline
    
    Call MakeCustomZip(MyArray)
End Sub
